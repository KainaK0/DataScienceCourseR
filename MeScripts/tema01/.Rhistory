install.packages("RUnit")
setwd(dir = )
setwd(C:\Users\johan\Google Drive\Drive\Courses\DataScienceCourseR)
setwd("C:\Users\johan\Google Drive\Drive\Courses\DataScienceCourseR)
getwd()
setwd("../Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/")
getwd()
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv", header = TRUE, sep= ",")
View(auto)
View(auto)
names(auto)
auto_ne_header <- read.csv("../r-course/data/tema1/auto-mpg-noheader.csv", header = TRUE, sep=",")
View(auto_ne_header)
auto_ne_header <- read.csv("../r-course/data/tema1/auto-mpg-noheader.csv", header = FALSE, sep=",")
View(auto_ne_header)
head(auto_ne_header)
_header <- read.csv("../r-course/data/tema1/auto-mpg-noheader.csv", header = FALSE, sep=",")
head(auto_no_header)
auto_no_header <- read.csv("../r-course/data/tema1/auto-mpg-noheader.csv", header = FALSE, sep=",")
head(auto_no_header)
auto_no_sense <- read.csv("../r-course/data/tema1/auto-mpg-noheader.csv", header = TRUE, sep=",")
head(auto_no_sense)
c("millas_por_galon","cilindrada","desplazamiento","caballos_de_potecia","peso","aceleración","año","modelo" )
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv", header = TRUE, sep= ","
strings.na="")
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv", header = TRUE, sep= ",",
strings.na= "")
names(auto)
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv", header = TRUE, sep= ",",
strings.na= "")
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv",
header = TRUE, sep= ",",
strings.na= "")
names(auto)
#read.csv2 <- read.csv("Filename", sep=";", dec = ",")
auto_no_header <- read.csv("../r-course/data/tema1/auto-mpg-noheader.csv", header = FALSE, sep=",")
head(auto_no_header)
auto_no_sense <- read.csv("../r-course/data/tema1/auto-mpg-noheader.csv", header = TRUE, sep=",")
head(auto_no_sense)
#NA = Not Avalable
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv",
header = TRUE, sep= ",",
strings.na= "")
install.packages("MASS")
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv",
header = TRUE, sep= ",",
strings.na= "")
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv",
header = TRUE, sep= ",", na.strings = )
names(auto)
auto <- read.csv("../r-course/data/tema1/auto-mpg.csv",
header = TRUE, sep= ",", na.strings = "",
stringsAsFactors = FALSE)
names(auto)
WHO_auto_from_intrenet <- read.csv("http://frogames.es/course-contents/r/intro/tema1/WHO.csv")
View(WHO_auto_from_intrenet)
install.packages("XML")
library("XML", lib.loc="~/R/win-library/3.5")
detach("package:XML", unload=TRUE)
library(XML)
url <- "../r-course/data/tema1/cd_catalog.xml"
rootnode[1]
rootnode <- xmlRoot(xmldoc)
rootnode[1]
xmldoc <- xmlParse(url)
xmldoc <- xmlParse(url)
rootnode <- xmlRoot(xmldoc)
rootnode[1]
cds_data <- xmlSApply(rootnode, function(x) xmlSApply(x,xmlValue))
View(cds_data)
cds_catalog <- data.frame(t(cds_data),row.names = NULL)
View(cds_catalog)
View(cds_catalog)
View(cds_catalog)
cds_catalog <- data.frame(t(cds_data))
View(cds_catalog)
View(cds_catalog)
,row.names = NULL
View(cds_catalog)
cds_catalog <- data.frame(t(cds_data),row.names = NULL)
View(cds_catalog)
head(cds_catalog)
head(cds_catalog,2)
library(XML)
url <- "../r-course/data/tema1/cd_catalog.xml"
xmldoc <- xmlParse(url)
rootnode <- xmlRoot(xmldoc)
rootnode[1]
cds_data <- xmlSApply(rootnode, function(x) xmlSApply(x,xmlValue))
cds.catalog <- data.frame(t(cds_data),row.names = NULL)
head(cds.catalog,2)
population_url <- "../r-course/data/tema1/WorldPopulation-wiki.htm"
tables <- readHTMLTable(population_url)
View(tables)
View(tables)
most_populated <- table[[6]]
most_populated <- tables[[6]]
head(most_populated,4)
couston_table <- readHTMLTable(population_url, which = 6)
View(couston_table)
View(couston_table)
install.packages("jsonlite")
library(jsonlite)
data.1 <- fromJSON("../r-course/data/tema1/students.json")
View(data.1)
dat.1 <- fromJSON("../r-course/data/tema1/students.json")
dat.2 <- fromJSON("../r-course/data/tema1/student-courses.json")
dat.1 <- fromJSON("../r-course/data/tema1/students.json")
View(dat.1)
View(dat.2)
dat.1$Email
detach("package:jsonlite", unload=TRUE)
library("jsonlite", lib.loc="~/R/win-library/3.5")
students_data <- read.fwf("../r-course/data/tema1/student-fwf.txt",
widths = c(4,15,20,15,4),
col.names = c("id","nombre","email","carrera", "año"))
View(students_data)
students_data_header <- read.fwf("../r-course/data/tema1/student-fwf-header.txt",
widths = c(4,15,20,15,4),
header = T, sep = "\t",
skip = 2)
View(students_data_header)
clientes <- c("Juan Gabriel", "Ricardo", "Pedro")
clientes <- c("Juan Gabriel", "Ricardo", "Pedro")
fechas <- as.Date(c("2017-12-27", "2017-11-1", "2017-1-1"))
fechas <- as.Date(c("2017-12-27", "2017-11-1", "2017-1-1"))
pedidos <- data.frame(clientes,fechas,pagos)
pedidos <- data.frame(clientes,fechas,pago)
pago <- c(315,192.55,40.15)
pedidos <- data.frame(clientes,fechas,pago)
View(pedidos)
View(pedidos)
save(pedidos,file = "../r-course/data/tema1/pedidos_me.Rdata")
saveRDS(pedidos,file = "../r-course/data/tema1/pedidosRDS_me.reds")
saveRDS(pedidos,file = "../r-course/data/tema1/pedidosRDS_me.rds")
clientes_vip <- c("Juan Gabriel", "Ricardo")
pedidos <- data.frame(clientes,clientes_vip,fechas,pago)
save(pedidos,clientes_vip,file = "../r-course/data/tema1/pedidos_me.Rdata")
remove(pedidos)
pedidos <- data.frame(clientes,fechas,pago)
load("../r-course/data/tema1/pedidos_me.Rdata")
oders <- readRDS("../r-course/data/tema1/pedidosRDS_me.rds")
data(iris)
data("cars")
data(Iris)
data("iris")
data(iris)
data(cars)
save(list=c("prime","pow2"),file ="../r-course/data/tema1/primes_and_pow2.Rdata")
rime <- c(3,5,7,11,17)
pow2 <- c(2,4,8,16,32,64,128)
save(li
prime <- c(3,5,7,11,17)
pow2 <- c(2,4,8,16,32,64,128)
save(list=c("prime","pow2"),file ="../r-course/data/tema1/primes_and_pow2.Rdata")
prime <- c(3,5,7,11,17)
pow2 <- c(2,4,8,16,32,64,128)
save(list=c("prime","pow2"),file ="../r-course/data/tema1/primes_and_pow2.Rdata")
remove(rime)
attach("../r-course/data/tema1/primes_and_pow2.Rdata")
data <- read.csv("../r-course/data/tema1/missing-data.csv")
data <- read.csv("../r-course/data/tema1/missing-data.csv")
View(data)
data <- read.csv("../r-course/data/tema1/missing-data.csv" header = T)
data <- read.csv("../r-course/data/tema1/missing-data.csv" header = T)
data <- read.csv("../r-course/data/tema1/missing-data.csv" header = TRUE)
data <- read.csv("../r-course/data/tema1/missing-data.csv", header = TRUE)
data <- read.csv("../r-course/data/tema1/missing-data.csv", header = TRUE,na.strings = NA)
View(data)
View(data)
data <- read.csv("../r-course/data/tema1/missing-data.csv", header = TRUE,na.strings = "")
View(data)
data <- read.csv("../r-course/data/tema1/missing-data.csv", header = TRUE, na.strings = "")
View(data)
View(data)
data.cleaned <- na.omit(data)
View(data.cleaned)
is.na(data$Phone_type)
data.income.cleaned <- data[!is.na(data$Income)]
data.income.cleaned <- data[,!is.na(data$Income)]
data.income.cleaned <- data[!is.na(data$Income),]
complete.cases(data)
View(data)
data <- read.csv("../r-course/data/tema1/missing-data.csv", header = TRUE, na.strings = "Luxury")
View(data)
data <- read.csv("../r-course/data/tema1/missing-data.csv", header = TRUE, na.strings = )
data <- read.csv("../r-course/data/tema1/missing-data.csv", header = TRUE, na.strings = "")
View(data)
data.cleanes2 <- data[complete.cases(data),]
#modo alternativo al i.omit
data.cleaned2 <- data[complete.cases(data),]
remove(data.cleanes2)
data$Income[data$Income==0] <- NA
View(data)
# Medidas de centrelización y disperción
mean(data$Income)
mean(data$Income, rm.na=TRUE)
mean(data$Income, na.rm =TRUE)
sd(data$Income)
sd(data$Income,na.rm = TRUE)
data <- read.csv("../r-course/data/tema1/missing-data.csv")
data <- read.csv("../r-course/data/tema1/missing-data.csv")
data$Income.mean <- ifelse(is.na(data$Income),
mean(data$Income,na.rm = T),
data$Income)
View(data)
View(data)
source('C:/Users/johan/Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/06_ReplaceMisingData.R')
data <- read.csv("../r-course/data/tema1/missing-data.csv",na.strings = "",header = T)
data$Income.mean <- ifelse(is.na(data$Income),
mean(data$Income,na.rm = T),
data$Income)
imputed[missing] <- sample(x.obs, n.missing,replace = TRUE)
data <- read.csv("../r-course/data/tema1/missing-data.csv",na.strings = "",header = T)
#x.obs vector booleano de valores que no son NA de x
x.obs <- x[!missing()]
#x.obs vector booleano de valores que no son NA de x
x.obs <- x[!missing]
#x.obs vector booleano de valores que no son NA de x
x.obs <- x[!missing]
#X es un vector de datos que puede contener NA
rand.input <- function(x){
# missing es un Vector booleano dependiendo del NA de x
missing <- is.na(x)
#n.missing contiene cuantos NA dentro de x
n.missing <- sum(missing)
#x.obs vector booleano de valores que no son NA de x
x.obs <- x[!missing]
#devuelve la entrada por defecto
imputed <- x
#valores faltantes se remplazan por una muestra de los conocidos
imputed[missing] <- sample(x.obs, n.missing,replace = TRUE)
return(imputed)
}
random.impute.data.frame <- function(dataframe, cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(names(col),"imputed",sep = ",")
dataframe[name] <- rand.input(dataframe[,col])
}
}
random.impute.data.frame(data,c(1,2))
View(data)
source('C:/Users/johan/Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/06_ReplaceMisingData.R')
name <- paste(names[col],"imputed",sep = ",")
random.impute.data.frame <- function(dataframe, cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(names[col],"imputed",sep = ",")
dataframe[name] <- rand.input(dataframe[,col])
}
}
random.impute.data.frame(data,c(1,2))
View(data)
source('C:/Users/johan/Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/06_ReplaceMisingData.R')
rand.inpute <- function(x){
# missing es un Vector booleano dependiendo del NA de x
missing <- is.na(x)
#n.missing contiene cuantos NA dentro de x
n.missing <- sum(missing)
#x.obs vector booleano de valores que no son NA de x
x.obs <- x[!missing]
#devuelve la entrada por defecto
imputed <- x
#valores faltantes se remplazan por una muestra de los conocidos
imputed[missing] <- sample(x.obs, n.missing,replace = TRUE)
return(imputed)
}
random.impute.data.frame <- function(dataframe, cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(names[col],"imputed",sep = ".")
dataframe[name] <- rand.inpute(dataframe[,col])
}
}
rand.impute <- function(x){
# missing es un Vector booleano dependiendo del NA de x
missing <- is.na(x)
#n.missing contiene cuantos NA dentro de x
n.missing <- sum(missing)
#x.obs vector booleano de valores que no son NA de x
x.obs <- x[!missing]
#devuelve la entrada por defecto
imputed <- x
#valores faltantes se remplazan por una muestra de los conocidos
imputed[missing] <- sample(x.obs, n.missing,replace = TRUE)
return(imputed)
}
random.impute.data.frame <- function(dataframe, cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(names[col],"imputed",sep = ".")
dataframe[name] <- rand.impute(dataframe[,col])
}
}
data <- read.csv("../r-course/data/tema1/missing-data.csv",na.strings = "",header = T)
data <- random.impute.data.frame(data,c(1,2))
source('C:/Users/johan/Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/06_ReplaceMisingData.R')
data <- read.csv("../r-course/data/tema1/missing-data.csv",na.strings = "",header = T)
data <- random.impute.data.frame(data,c(1,2))
random.impute.data.frame <- function(dataframe, cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(names[col],"imputed", sep = ".")
dataframe[name] <- rand.impute(dataframe[,col])
}
dataframe
}
-
data <- read.csv("../r-course/data/tema1/missing-data.csv",na.strings = "",header = T)
data <- read.csv("../r-course/data/tema1/missing-data.csv",na.strings = "",header = T)
random.impute.data.frame <- function(dataframe, cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(names[col],"imputed", sep = ".")
dataframe[name] <- rand.impute(dataframe[,col])
}
dataframe
}
data <- random.impute.data.frame(data, c(1,2))
View(data)
source('C:/Users/johan/Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/06_ReplaceMisingData.R')
data$Income[data$Income==0]<-NA
data <- read.csv("../r-course/data/tema1/missing-data.csv",na.strings = "",header = T)
data$Income[data$Income==0]<-NA
data <- random.impute.data.frame(data, c(1,2))
View(data)
source('C:/Users/johan/Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/06_ReplaceMisingData.R')
remove(rand.input())
remove(rand.input)
remove(rand.inpute)
source('C:/Users/johan/Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/06_ReplaceMisingData.R')
source('C:/Users/johan/Google Drive/Drive/Courses/DataScienceCourseR/MeScripts/06_ReplaceMisingData.R')
family.salary <- family.salary*1000
family.salary <- c(4,6,5,8,6,7,6)
family.salary <- family.salary*10000
family.size <- c(4,3,2,2,3,4,3)
family.car <- c("Lujo","Compacto","Utilitario","Lujo","Compacto","Compacto","Compacto")
family <- data.frame(family.salary,family.size,family.car)
remove(data)
View(family)
unique(family)
#función que elimina duplicaciones
family.unique <- unique(family)
duplicated(family)
family <- family[,duplicated(family)]
family <- family[duplicated(family),]
View(family)
View(family)
family <- data.frame(family.salary,family.size,family.car)
family <- family[!duplicated(family),]
View(family)
View(family)
family[!duplicated(family),]
m
family <- data.frame(family.salary,family.size,family.car)
install.packages("scales")
library(sacale)
library(scales)
students <- read.csv("../r-course/data/tema1/data-conversion.csv")
students <- read.csv("../r-course/data/tema1/data-conversion.csv")
View(students)
students$Income.rescaled <- rescale(students)
students$Income.rescaled <- rescale(students$Income)
View(students)
rescale(students$Income, to = c(0,100))
dataframe
resacle.many <- function(dataframe,cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(dataframe[col],"rescaled",sep = ".")
dataframe[name] <- rescale(dataframe[,col])
}
cat(paste("Hemos rescalado",length(cols),"variable(S)"))
dataframe
}
students <- read.csv("../r-course/data/tema1/data-conversion.csv")
rescale.many(students,c(1,4))
rescale.many <- function(dataframe,cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(dataframe[col],"rescaled",sep = ".")
dataframe[name] <- rescale(dataframe[,col])
}
cat(paste("Hemos rescalado",length(cols),"variable(S)"))
dataframe
}
rescale.many(students,c(1,4))
View(students)
student <- rescale.many(students,c(1,4))
View(student)
rescale.many <- function(dataframe,cols){
names <- names(dataframe)
for (col in cols) {
name <- paste(names[col],"rescaled",sep = ".")
dataframe[name] <- rescale(dataframe[,col])
}
cat(paste("Hemos rescalado",length(cols),"variable(S)"))
dataframe
}
students <- read.csv("../r-course/data/tema1/data-conversion.csv")
student <- rescale.many(students,c(1,4))
View(student)
student <- rescale.many(students,c(1,4,5))
View(student)
remove(resacle)
remove(resacle.many)
remove(student)
